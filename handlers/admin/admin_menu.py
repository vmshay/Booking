from aiogram import types, Dispatcher
from keyboards import register_kb, main_kb, admin_keyboard
import database


async def enter_admin_menu(message: types.message):
    Db = database.Database()
    if not Db.sql_simple_check(sql=f"select tg_id from user_table where tg_id ={message.from_user.id}") or \
            not Db.sql_simple_check(sql=f"select approved from user_table where tg_id={message.from_user.id}"):
        await message.delete()
        await message.answer("–ö–æ–º–∞–Ω–¥—ã —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", reply_markup=register_kb)
    elif not Db.sql_simple_check(sql=f'select admin from user_table where tg_id = {message.from_user.id}'):
        await message.answer("–î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
    else:
        await message.delete()
        await message.answer(f"–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∞–∫–µ–µ–º\n\n"
                             f"–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫–∞–º–∏", reply_markup=admin_keyboard)


async def exit_admin_menu(message: types.message):
    Db = database.Database()
    if not Db.sql_simple_check(sql=f"select tg_id from user_table where tg_id ={message.from_user.id}") or \
            not Db.sql_simple_check(sql=f"select approved from user_table where tg_id={message.from_user.id}"):
        await message.delete()
        await message.answer("–ö–æ–º–∞–Ω–¥—ã —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", reply_markup=register_kb)
    elif not Db.sql_simple_check(sql=f'select admin from user_table where tg_id = {message.from_user.id}'):
        await message.answer("–î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤", reply_markup=main_kb)
    else:
        await message.answer("–í—ã—Ö–æ–¥", reply_markup=main_kb)


def register_admin_menu(dp: Dispatcher):
    dp.register_message_handler(enter_admin_menu, text="üëÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
    dp.register_message_handler(exit_admin_menu, text="–í—ã–π—Ç–∏")
